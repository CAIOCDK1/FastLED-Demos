#ifndef VUMETER_H
#define VUMETER_H

/*
 * Here's a vu meter with a falling LED. Adapted from Reko Meri√∂.
 */

void vumeter() {

// Local definitions
  #define GRAVITY 2

// Persistent local variables
  static uint8_t topLED;
  static int gravityCounter = 0;

// Temporary local variables
  uint8_t ledlocation;

  
  ledlocation = map(constrain(qsampleavg,0,120),0,120,0,NUM_LEDS-1);

  for (int i = 0; i < ledlocation; i++) {
    leds[i] = ColorFromPalette(currentPalette, millis()/4 + i * 4, 255, LINEARBLEND);
  }

  if (ledlocation >= topLED)
    topLED = ledlocation;
  else if (gravityCounter % GRAVITY == 0)
    topLED--;

  if (topLED > 0) {
    leds[topLED] = ColorFromPalette(currentPalette, millis(), 255, LINEARBLEND);                       // LED falls when the volume goes down.
  }
  
  gravityCounter++;
  
  if (gravityCounter > GRAVITY) gravityCounter = 0;

  fadeToBlackBy(leds, NUM_LEDS, 160);

} // vumeter()

#endif

